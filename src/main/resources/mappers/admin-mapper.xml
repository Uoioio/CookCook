<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="Admin">
  	<select id="login" resultType="boolean">
  		select count(*) from Member where id = #{id} and pw = #{pw}
  	</select>
  	<select id="selectAdminMemberInfo" resultType="cc.spring.dto.MemberDTO">
  		select * from Member where id = #{id} and pw = #{pw}
  	</select>
  	<!-- GPT 이용 통계 -->
	<select id="selectSuccessMeal" resultType="int">
		select
		sum(mealSuccess) as mealSuccess_Total from GPTCOUNT
	</select>
	<select id="selectFailMeal" resultType="int">
		select sum(mealFail) as
		meal_Total from GPTCOUNT
	</select>
	<select id="selectSuccessBasket" resultType="int">
		select
		sum(basketSuccess) as basketSuccess_Total from GPTCOUNT
	</select>
	<select id="selectFailBasket" resultType="int">
		select sum(basketFail)
		as basketFail_Total from GPTCOUNT
	</select>
	<select id="selectTotalSuccess" resultType="int">
		select (sum(mealSuccess)+sum(basketSuccess)) from GPTCOUNT
	</select>
	<select id="selectTotalFail" resultType="int">
		select (sum(mealFail)+sum(basketFail)) from GPTCOUNT
	</select>
	<!-- 관리자 클라이언트회원목록 리스트 -->
	<select id="clientUserList" resultType="cc.spring.dto.MemberDTO">
		SELECT B.ID, COUNT(R.CODE)AS
		REPORTCOUNT,b.nickname,b.companyName,b.email,b.regDate FROM MEMBER b 
		left join REPORT R ON B.CODE = R.REPORTEECODE
		where b.authgradecode=1003
		GROUP BY B.ID,b.nickname,b.companyName,b.email,b.regDate
	</select>
	<!-- 관리자 판매자 회원목록 리스트 -->
	<select id="businessUserList" resultType="cc.spring.dto.MemberDTO">
		SELECT B.businessid, COUNT(R.CODE)AS REPORTCOUNT
        , b.name, b.companyName, b.email, b.regDate FROM MEMBER b 
		left join REPORT R ON B.CODE = R.REPORTEECODE
        where b.authgradecode=1002
		GROUP BY B.businessid,b.name,b.companyName,b.email,b.regDate
	</select>
	
	<!-- 공구샵 리스트 -->
	<select id="selectShopList" resultType="cc.spring.dto.ShopListDTO">
		select code,statuscode,title,productname,companyname,path,sysname
		from (
   			select g.code,g.statuscode,g.title,g.productname,m.companyname,
   			substr(gi.path, instr(gi.path,'\resources',1,1)) || '\' as path,gi.sysname,
    		row_number() over(partition by g.code order by sysname) as rn
    		from groupbuying g join member m on g.membercode = m.code
    		join groupbuyingimg gi on g.code = gi.postcode
    		)
		where rn=1
		order by 1
	</select>
	
</mapper>